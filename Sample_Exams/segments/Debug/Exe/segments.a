;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;int lnum = 0, rnum = 0, i = 0, change_left = 0;
;
;const char bcdequ[] = { 0x3F, 0x06, 0x5B, 0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F, 0x77,0x7C, 0x39 , 0x5E, 0x79, 0x71 }  ;
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0009 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000A // Reinitialize Timer 0 value
; 0000 000B TCNT0=0x93;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000C i = (i + 1) % 8;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 000D }
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0011 {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0012 // Reinitialize Timer1 value
; 0000 0013 TCNT1H=0x85EE >> 8;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0014 TCNT1L=0x85EE & 0xff;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0015 
; 0000 0016 rnum++;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0017 
; 0000 0018 if (change_left == 1) {
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0019     lnum--;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 001A     change_left = 0;
;PCODE: $00000028 VOL: 0
; 0000 001B } else {
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001C     change_left = 1;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001D }
;PCODE: $0000002D VOL: 0
; 0000 001E 
; 0000 001F }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;
;void main(void)
; 0000 0022 {
;PCODE: $00000031 VOL: 0
; 0000 0023 // Declare your local variables here
; 0000 0024 
; 0000 0025 // Input/Output Ports initialization
; 0000 0026 // Port B initialization
; 0000 0027 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0028 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0029 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 002A PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002B 
; 0000 002C // Port C initialization
; 0000 002D // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 002E DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002F // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0030 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0031 
; 0000 0032 // Timer/Counter 0 initialization
; 0000 0033 // Clock source: System Clock
; 0000 0034 // Clock value: 31.250 kHz
; 0000 0035 // Mode: Normal top=0xFF
; 0000 0036 // OC0 output: Disconnected
; 0000 0037 // Timer Period: 3.488 ms
; 0000 0038 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0039 TCNT0=0x93;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 003A OCR0=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 003B 
; 0000 003C // Timer/Counter 1 initialization
; 0000 003D // Clock source: System Clock
; 0000 003E // Clock value: 125.000 kHz
; 0000 003F // Mode: Normal top=0xFFFF
; 0000 0040 // OC1A output: Disconnected
; 0000 0041 // OC1B output: Disconnected
; 0000 0042 // Noise Canceler: Off
; 0000 0043 // Input Capture on Falling Edge
; 0000 0044 // Timer Period: 0.5 s
; 0000 0045 // Timer1 Overflow Interrupt: On
; 0000 0046 // Input Capture Interrupt: Off
; 0000 0047 // Compare A Match Interrupt: Off
; 0000 0048 // Compare B Match Interrupt: Off
; 0000 0049 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 004A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 004B TCNT1H=0x0B;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004C TCNT1L=0xDC;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004D ICR1H=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 004E ICR1L=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 004F OCR1AH=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0050 OCR1AL=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0051 OCR1BH=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0052 OCR1BL=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0053 
; 0000 0054 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0055 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0056 
; 0000 0057 // Global enable interrupts
; 0000 0058 #asm("sei")
;PCODE: $00000056 VOL: 0
	sei
;PCODE: $00000057 VOL: 0
; 0000 0059 
; 0000 005A while (1)
;PCODE: $00000058 VOL: 0
; 0000 005B       {
; 0000 005C if (lnum < 0) {
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 005D     lnum = 9999;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 005E }
; 0000 005F if (rnum > 9999) {
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0060     rnum = 0;
;PCODE: $00000061 VOL: 0
; 0000 0061 }
; 0000 0062 
; 0000 0063 
; 0000 0064     if (i == 0) {
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0065         PORTB = 0b11111110;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0066         PORTC = bcdequ[lnum / 1000];
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0067     }
; 0000 0068     if (i == 1) {
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0069         PORTB = 0b11111101;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 006A         PORTC = bcdequ[(lnum / 100) % 10];
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 006B     }
; 0000 006C     if (i == 2) {
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006D         PORTB = 0b11111011;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 006E         PORTC = bcdequ[(lnum / 10) % 10];
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 006F     }
; 0000 0070     if (i == 3) {
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0071         PORTB = 0b11110111;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0072         PORTC = bcdequ[lnum % 10];
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0073     }
; 0000 0074     if (i == 4) {
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0075         PORTB = 0b11101111;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0076         PORTC = bcdequ[rnum / 1000];
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0077     }
; 0000 0078     if (i == 5){
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0079         PORTB = 0b11011111;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 007A         PORTC = bcdequ[(rnum / 100) % 10];
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 007B     }
; 0000 007C     if (i == 6) {
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 007D         PORTB = 0b10111111;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 007E         PORTC = bcdequ[(rnum / 10) % 10];
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 007F     }
; 0000 0080     if (i == 7) {
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0081         PORTB = 0b01111111;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0082         PORTC = bcdequ[rnum % 10];
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0083     }
; 0000 0084 
; 0000 0085       }
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0086 }
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
