;/* Mahdi Amiri
;98522148 */
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// Graphic Display functions
;#include <glcd.h>
;
;// Font used for displaying text
;// on the graphic display
;#include <font5x7.h>
;
;// Declare your global variables here
;
;void main(void)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0012 int delay = 2000, ball_x = 128 / 2, ball_y = 64 / 2, x_velocity = 1, y_velocity = 1;
; 0000 0013 // Variable used to store graphic display
; 0000 0014 // controller initialization data
; 0000 0015 GLCDINIT_t glcd_init_data;
; 0000 0016 
; 0000 0017 // Input/Output Ports initialization
; 0000 0018 // Port A initialization
; 0000 0019 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 001A DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;	delay -> R16,R17
;	ball_x -> R18,R19
;	ball_y -> R20,R21
;	x_velocity -> Y+8
;	y_velocity -> Y+6
;	glcd_init_data -> Y+0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 001C PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001D 
; 0000 001E // Port B initialization
; 0000 001F // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0020 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0021 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0022 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0023 
; 0000 0024 // Port C initialization
; 0000 0025 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0026 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0027 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0028 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0029 
; 0000 002A // Port D initialization
; 0000 002B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002C DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 002E PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002F 
; 0000 0030 // Graphic Display Controller initialization
; 0000 0031 // The KS0108 connections are specified in the
; 0000 0032 // Project|Configure|C Compiler|Libraries|Graphic Display menu:
; 0000 0033 // DB0 - PORTA Bit 0
; 0000 0034 // DB1 - PORTA Bit 1
; 0000 0035 // DB2 - PORTA Bit 2
; 0000 0036 // DB3 - PORTA Bit 3
; 0000 0037 // DB4 - PORTA Bit 4
; 0000 0038 // DB5 - PORTA Bit 5
; 0000 0039 // DB6 - PORTA Bit 6
; 0000 003A // DB7 - PORTA Bit 7
; 0000 003B // E - PORTB Bit 0
; 0000 003C // RD /WR - PORTB Bit 1
; 0000 003D // RS - PORTB Bit 2
; 0000 003E // /RST - PORTB Bit 3
; 0000 003F // CS1 - PORTB Bit 4
; 0000 0040 // CS2 - PORTB Bit 5
; 0000 0041 
; 0000 0042 // Specify the current font for displaying text
; 0000 0043 glcd_init_data.font=font5x7;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0044 // No function is used for reading
; 0000 0045 // image data from external memory
; 0000 0046 glcd_init_data.readxmem=NULL;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0047 // No function is used for writing
; 0000 0048 // image data to external memory
; 0000 0049 glcd_init_data.writexmem=NULL;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 004A 
; 0000 004B glcd_init(&glcd_init_data);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 004C 
; 0000 004D // Name and Student number
; 0000 004E glcd_clear();
;PCODE: $00000035 VOL: 0
; 0000 004F delay_ms(50);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0050 glcd_outtext("Mahdi Amiri");
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0051 glcd_moveto(0, 55);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0052 glcd_outtext("98522148");
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0053 delay_ms(delay);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0054 
; 0000 0055 // House painting
; 0000 0056 glcd_clear();
;PCODE: $00000045 VOL: 0
; 0000 0057 glcd_line(20, 5, 44, 5);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0058 glcd_line(44, 5, 44, 10);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0059 glcd_line(20, 5, 20, 10);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 005A glcd_line(38, 10, 44, 10);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 005B glcd_line(20, 10, 24, 10);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 005C glcd_line(38, 10, 38, 16);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 005D glcd_line(38, 16, 64, 4);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 005E glcd_line(125, 32, 64, 4);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 005F glcd_line(125, 32, 105, 32);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0060 glcd_line(105, 32, 105, 61);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0061 glcd_line(105, 61, 23, 61);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0062 glcd_line(23, 61, 23, 33);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0063 glcd_line(4, 33, 23, 33);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0064 glcd_line(4, 33, 24, 23);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0065 glcd_line(24, 10, 24, 23);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0066 delay_ms(delay);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0067 
; 0000 0068 // Ball Move
; 0000 0069 glcd_clear();
;PCODE: $000000C0 VOL: 0
; 0000 006A while (1) {
;PCODE: $000000C1 VOL: 0
; 0000 006B     glcd_circle(ball_x, ball_y, 5);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 006C     ball_x += x_velocity;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 006D     ball_y += y_velocity;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 006E     if (ball_x == 127 - 5) {
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 006F         x_velocity = -1;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 0070     }
; 0000 0071     if (ball_y == 63 - 5) {
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0072         y_velocity = -1;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0073     }
; 0000 0074     if (ball_x == 5) {
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0075         x_velocity = 1;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0076     }
; 0000 0077     if (ball_y == 5) {
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0078         y_velocity = 1;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0079     }
; 0000 007A     delay_ms(100);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 007B     glcd_clear();
;PCODE: $000000E7 VOL: 0
; 0000 007C }
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 007D 
; 0000 007E }
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0

	.DSEG
_0x3:
	.BYTE 0x15
